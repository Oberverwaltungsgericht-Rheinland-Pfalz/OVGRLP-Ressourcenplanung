// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Rema.DbAccess.Migrations
{
  [DbContext(typeof(RpDbContext))]
  [Migration("20190820111245_Inital")]
  partial class Inital
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
          .HasAnnotation("Relational:MaxIdentifierLength", 128)
          .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

      modelBuilder.Entity("DbRaumplanung.Models.Allocation", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<DateTime>("ApprovedAt");

            b.Property<long?>("ApprovedById");

            b.Property<DateTime>("CreatedAt");

            b.Property<long>("CreatedById");

            b.Property<DateTime>("From");

            b.Property<bool>("IsAllDay");

            b.Property<DateTime>("LastModified");

            b.Property<long?>("LastModifiedById");

            b.Property<long?>("PurposeId");

            b.Property<long?>("ReferencePersonId");

            b.Property<long?>("RessourceId");

            b.Property<int>("Status");

            b.Property<DateTime>("To");

            b.HasKey("Id");

            b.HasIndex("ApprovedById");

            b.HasIndex("CreatedById");

            b.HasIndex("LastModifiedById");

            b.HasIndex("PurposeId");

            b.HasIndex("ReferencePersonId");

            b.HasIndex("RessourceId");

            b.ToTable("Allocations");
          });

      modelBuilder.Entity("DbRaumplanung.Models.AllocationPurpose", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("ContactPhone");

            b.Property<string>("Description")
                      .HasMaxLength(3000);

            b.Property<string>("Notes")
                      .HasMaxLength(3000);

            b.Property<string>("Title")
                      .IsRequired();

            b.HasKey("Id");

            b.ToTable("AllocationPurposes");
          });

      modelBuilder.Entity("DbRaumplanung.Models.Gadget", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<long?>("AllocationPurposeId");

            b.Property<long?>("RessourceId");

            b.Property<long?>("SuppliedById");

            b.Property<string>("Title");

            b.HasKey("Id");

            b.HasIndex("AllocationPurposeId");

            b.HasIndex("RessourceId");

            b.HasIndex("SuppliedById");

            b.ToTable("Gadgets");
          });

      modelBuilder.Entity("DbRaumplanung.Models.Ressource", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("FunctionDescription");

            b.Property<string>("Name")
                      .IsRequired();

            b.Property<string>("SpecialsDescription");

            b.Property<string>("Type");

            b.Property<string>("Usability");

            b.HasKey("Id");

            b.HasIndex("Name");

            b.ToTable("Ressources");
          });

      modelBuilder.Entity("DbRaumplanung.Models.SupplierGroup", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("GroupEmail");

            b.Property<string>("Title")
                      .IsRequired();

            b.Property<long?>("UserId");

            b.HasKey("Id");

            b.HasIndex("UserId");

            b.ToTable("SupplierGroups");
          });

      modelBuilder.Entity("DbRaumplanung.Models.User", b =>
          {
            b.Property<long>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Email")
                      .IsRequired();

            b.Property<string>("Mobile");

            b.Property<string>("Name")
                      .IsRequired();

            b.Property<string>("Phone");

            b.HasKey("Id");

            b.ToTable("Users");
          });

      modelBuilder.Entity("DbRaumplanung.Models.Allocation", b =>
          {
            b.HasOne("DbRaumplanung.Models.User", "ApprovedBy")
                      .WithMany()
                      .HasForeignKey("ApprovedById");

            b.HasOne("DbRaumplanung.Models.User", "CreatedBy")
                      .WithMany()
                      .HasForeignKey("CreatedById")
                      .OnDelete(DeleteBehavior.Cascade);

            b.HasOne("DbRaumplanung.Models.User", "LastModifiedBy")
                      .WithMany()
                      .HasForeignKey("LastModifiedById");

            b.HasOne("DbRaumplanung.Models.AllocationPurpose", "Purpose")
                      .WithMany("Allocations")
                      .HasForeignKey("PurposeId");

            b.HasOne("DbRaumplanung.Models.User", "ReferencePerson")
                      .WithMany()
                      .HasForeignKey("ReferencePersonId");

            b.HasOne("DbRaumplanung.Models.Ressource", "Ressource")
                      .WithMany()
                      .HasForeignKey("RessourceId");
          });

      modelBuilder.Entity("DbRaumplanung.Models.Gadget", b =>
          {
            b.HasOne("DbRaumplanung.Models.AllocationPurpose")
                      .WithMany("Gadgets")
                      .HasForeignKey("AllocationPurposeId");

            b.HasOne("DbRaumplanung.Models.Ressource")
                      .WithMany("Gadgets")
                      .HasForeignKey("RessourceId");

            b.HasOne("DbRaumplanung.Models.SupplierGroup", "SuppliedBy")
                      .WithMany()
                      .HasForeignKey("SuppliedById");
          });

      modelBuilder.Entity("DbRaumplanung.Models.SupplierGroup", b =>
          {
            b.HasOne("DbRaumplanung.Models.User")
                      .WithMany("SupplierGroups")
                      .HasForeignKey("UserId");
          });
#pragma warning restore 612, 618
    }
  }
}
